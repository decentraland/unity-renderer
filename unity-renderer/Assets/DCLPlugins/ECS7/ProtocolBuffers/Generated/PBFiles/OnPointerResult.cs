// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OnPointerResult.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DCL.ECSComponents {

  /// <summary>Holder for reflection information generated from OnPointerResult.proto</summary>
  public static partial class OnPointerResultReflection {

    #region Descriptor
    /// <summary>File descriptor for OnPointerResult.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OnPointerResultReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVPblBvaW50ZXJSZXN1bHQucHJvdG8SEGRlY2VudHJhbGFuZC5lY3MaFGNv",
            "bW1vbi9WZWN0b3IzLnByb3RvItgBChFQQk9uUG9pbnRlclJlc3VsdBISCgpp",
            "ZGVudGlmaWVyGAEgASgJEhEKCWVudGl0eV9pZBgCIAEoAxIOCgZidXR0b24Y",
            "AyABKAkSEAoIbWVzaE5hbWUYBCABKAkSGAoGb3JpZ2luGAUgASgLMgguVmVj",
            "dG9yMxIbCglkaXJlY3Rpb24YBiABKAsyCC5WZWN0b3IzEhcKBXBvaW50GAcg",
            "ASgLMgguVmVjdG9yMxIYCgZub3JtYWwYCCABKAsyCC5WZWN0b3IzEhAKCGRp",
            "c3RhbmNlGAkgASgCQhSqAhFEQ0wuRUNTQ29tcG9uZW50c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Vector3Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.PBOnPointerResult), global::DCL.ECSComponents.PBOnPointerResult.Parser, new[]{ "Identifier", "EntityId", "Button", "MeshName", "Origin", "Direction", "Point", "Normal", "Distance" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PBOnPointerResult : pb::IMessage<PBOnPointerResult> {
    private static readonly pb::MessageParser<PBOnPointerResult> _parser = new pb::MessageParser<PBOnPointerResult>(() => new PBOnPointerResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBOnPointerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DCL.ECSComponents.OnPointerResultReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBOnPointerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBOnPointerResult(PBOnPointerResult other) : this() {
      identifier_ = other.identifier_;
      entityId_ = other.entityId_;
      button_ = other.button_;
      meshName_ = other.meshName_;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      point_ = other.point_ != null ? other.point_.Clone() : null;
      normal_ = other.normal_ != null ? other.normal_.Clone() : null;
      distance_ = other.distance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBOnPointerResult Clone() {
      return new PBOnPointerResult(this);
    }

    /// <summary>Field number for the "identifier" field.</summary>
    public const int IdentifierFieldNumber = 1;
    private string identifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identifier {
      get { return identifier_; }
      set {
        identifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private long entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "button" field.</summary>
    public const int ButtonFieldNumber = 3;
    private string button_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Button {
      get { return button_; }
      set {
        button_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "meshName" field.</summary>
    public const int MeshNameFieldNumber = 4;
    private string meshName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MeshName {
      get { return meshName_; }
      set {
        meshName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 5;
    private global::Vector3 origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Vector3 Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 6;
    private global::Vector3 direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Vector3 Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 7;
    private global::Vector3 point_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Vector3 Point {
      get { return point_; }
      set {
        point_ = value;
      }
    }

    /// <summary>Field number for the "normal" field.</summary>
    public const int NormalFieldNumber = 8;
    private global::Vector3 normal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Vector3 Normal {
      get { return normal_; }
      set {
        normal_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 9;
    private float distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBOnPointerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBOnPointerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Identifier != other.Identifier) return false;
      if (EntityId != other.EntityId) return false;
      if (Button != other.Button) return false;
      if (MeshName != other.MeshName) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      if (!object.Equals(Point, other.Point)) return false;
      if (!object.Equals(Normal, other.Normal)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Identifier.Length != 0) hash ^= Identifier.GetHashCode();
      if (EntityId != 0L) hash ^= EntityId.GetHashCode();
      if (Button.Length != 0) hash ^= Button.GetHashCode();
      if (MeshName.Length != 0) hash ^= MeshName.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (point_ != null) hash ^= Point.GetHashCode();
      if (normal_ != null) hash ^= Normal.GetHashCode();
      if (Distance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Identifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Identifier);
      }
      if (EntityId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EntityId);
      }
      if (Button.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Button);
      }
      if (MeshName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MeshName);
      }
      if (origin_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Origin);
      }
      if (direction_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Direction);
      }
      if (point_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Point);
      }
      if (normal_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Normal);
      }
      if (Distance != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Distance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Identifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identifier);
      }
      if (EntityId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EntityId);
      }
      if (Button.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Button);
      }
      if (MeshName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MeshName);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (point_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Point);
      }
      if (normal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Normal);
      }
      if (Distance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBOnPointerResult other) {
      if (other == null) {
        return;
      }
      if (other.Identifier.Length != 0) {
        Identifier = other.Identifier;
      }
      if (other.EntityId != 0L) {
        EntityId = other.EntityId;
      }
      if (other.Button.Length != 0) {
        Button = other.Button;
      }
      if (other.MeshName.Length != 0) {
        MeshName = other.MeshName;
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::Vector3();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::Vector3();
        }
        Direction.MergeFrom(other.Direction);
      }
      if (other.point_ != null) {
        if (point_ == null) {
          Point = new global::Vector3();
        }
        Point.MergeFrom(other.Point);
      }
      if (other.normal_ != null) {
        if (normal_ == null) {
          Normal = new global::Vector3();
        }
        Normal.MergeFrom(other.Normal);
      }
      if (other.Distance != 0F) {
        Distance = other.Distance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Identifier = input.ReadString();
            break;
          }
          case 16: {
            EntityId = input.ReadInt64();
            break;
          }
          case 26: {
            Button = input.ReadString();
            break;
          }
          case 34: {
            MeshName = input.ReadString();
            break;
          }
          case 42: {
            if (origin_ == null) {
              Origin = new global::Vector3();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 50: {
            if (direction_ == null) {
              Direction = new global::Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 58: {
            if (point_ == null) {
              Point = new global::Vector3();
            }
            input.ReadMessage(Point);
            break;
          }
          case 66: {
            if (normal_ == null) {
              Normal = new global::Vector3();
            }
            input.ReadMessage(Normal);
            break;
          }
          case 77: {
            Distance = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
