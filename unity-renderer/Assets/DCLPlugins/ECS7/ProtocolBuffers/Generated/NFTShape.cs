// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: NFTShape.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from NFTShape.proto</summary>
public static partial class NFTShapeReflection {

  #region Descriptor
  /// <summary>File descriptor for NFTShape.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static NFTShapeReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5ORlRTaGFwZS5wcm90bxoPY29tbW9uL2lkLnByb3RvGhNjb21tb24vQ29s",
          "b3IzLnByb3RvIo4CCgpQQk5GVFNoYXBlEhwKD3dpdGhfY29sbGlzaW9ucxgB",
          "IAEoCEgAiAEBEh8KEmlzX3BvaW50ZXJfYmxvY2tlchgCIAEoCEgBiAEBEhQK",
          "B3Zpc2libGUYAyABKAhIAogBARILCgNzcmMYBCABKAkSFQoIYXNzZXRfaWQY",
          "BSABKAlIA4gBARISCgVzdHlsZRgGIAEoBUgEiAEBEhsKBWNvbG9yGAcgASgL",
          "MgcuQ29sb3IzSAWIAQFCEgoQX3dpdGhfY29sbGlzaW9uc0IVChNfaXNfcG9p",
          "bnRlcl9ibG9ja2VyQgoKCF92aXNpYmxlQgsKCV9hc3NldF9pZEIICgZfc3R5",
          "bGVCCAoGX2NvbG9yQgWAtRiQCGIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::IdReflection.Descriptor, global::Color3Reflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PBNFTShape), global::PBNFTShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Src", "AssetId", "Style", "Color" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "AssetId", "Style", "Color" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PBNFTShape : pb::IMessage<PBNFTShape>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PBNFTShape> _parser = new pb::MessageParser<PBNFTShape>(() => new PBNFTShape());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PBNFTShape> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NFTShapeReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PBNFTShape() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PBNFTShape(PBNFTShape other) : this() {
    _hasBits0 = other._hasBits0;
    withCollisions_ = other.withCollisions_;
    isPointerBlocker_ = other.isPointerBlocker_;
    visible_ = other.visible_;
    src_ = other.src_;
    assetId_ = other.assetId_;
    style_ = other.style_;
    color_ = other.color_ != null ? other.color_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PBNFTShape Clone() {
    return new PBNFTShape(this);
  }

  /// <summary>Field number for the "with_collisions" field.</summary>
  public const int WithCollisionsFieldNumber = 1;
  private bool withCollisions_;
  /// <summary>
  /// @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool WithCollisions {
    get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
    set {
      _hasBits0 |= 1;
      withCollisions_ = value;
    }
  }
  /// <summary>Gets whether the "with_collisions" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWithCollisions {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "with_collisions" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWithCollisions() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "is_pointer_blocker" field.</summary>
  public const int IsPointerBlockerFieldNumber = 2;
  private bool isPointerBlocker_;
  /// <summary>
  /// @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsPointerBlocker {
    get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
    set {
      _hasBits0 |= 2;
      isPointerBlocker_ = value;
    }
  }
  /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsPointerBlocker {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsPointerBlocker() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "visible" field.</summary>
  public const int VisibleFieldNumber = 3;
  private bool visible_;
  /// <summary>
  /// @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Visible {
    get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
    set {
      _hasBits0 |= 4;
      visible_ = value;
    }
  }
  /// <summary>Gets whether the "visible" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVisible {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "visible" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVisible() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "src" field.</summary>
  public const int SrcFieldNumber = 4;
  private string src_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Src {
    get { return src_; }
    set {
      src_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "asset_id" field.</summary>
  public const int AssetIdFieldNumber = 5;
  private string assetId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AssetId {
    get { return assetId_ ?? ""; }
    set {
      assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "asset_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAssetId {
    get { return assetId_ != null; }
  }
  /// <summary>Clears the value of the "asset_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAssetId() {
    assetId_ = null;
  }

  /// <summary>Field number for the "style" field.</summary>
  public const int StyleFieldNumber = 6;
  private int style_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Style {
    get { if ((_hasBits0 & 8) != 0) { return style_; } else { return 0; } }
    set {
      _hasBits0 |= 8;
      style_ = value;
    }
  }
  /// <summary>Gets whether the "style" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStyle {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "style" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStyle() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "color" field.</summary>
  public const int ColorFieldNumber = 7;
  private global::Color3 color_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Color3 Color {
    get { return color_; }
    set {
      color_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PBNFTShape);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PBNFTShape other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (WithCollisions != other.WithCollisions) return false;
    if (IsPointerBlocker != other.IsPointerBlocker) return false;
    if (Visible != other.Visible) return false;
    if (Src != other.Src) return false;
    if (AssetId != other.AssetId) return false;
    if (Style != other.Style) return false;
    if (!object.Equals(Color, other.Color)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
    if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
    if (HasVisible) hash ^= Visible.GetHashCode();
    if (Src.Length != 0) hash ^= Src.GetHashCode();
    if (HasAssetId) hash ^= AssetId.GetHashCode();
    if (HasStyle) hash ^= Style.GetHashCode();
    if (color_ != null) hash ^= Color.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasWithCollisions) {
      output.WriteRawTag(8);
      output.WriteBool(WithCollisions);
    }
    if (HasIsPointerBlocker) {
      output.WriteRawTag(16);
      output.WriteBool(IsPointerBlocker);
    }
    if (HasVisible) {
      output.WriteRawTag(24);
      output.WriteBool(Visible);
    }
    if (Src.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Src);
    }
    if (HasAssetId) {
      output.WriteRawTag(42);
      output.WriteString(AssetId);
    }
    if (HasStyle) {
      output.WriteRawTag(48);
      output.WriteInt32(Style);
    }
    if (color_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Color);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasWithCollisions) {
      output.WriteRawTag(8);
      output.WriteBool(WithCollisions);
    }
    if (HasIsPointerBlocker) {
      output.WriteRawTag(16);
      output.WriteBool(IsPointerBlocker);
    }
    if (HasVisible) {
      output.WriteRawTag(24);
      output.WriteBool(Visible);
    }
    if (Src.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Src);
    }
    if (HasAssetId) {
      output.WriteRawTag(42);
      output.WriteString(AssetId);
    }
    if (HasStyle) {
      output.WriteRawTag(48);
      output.WriteInt32(Style);
    }
    if (color_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Color);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasWithCollisions) {
      size += 1 + 1;
    }
    if (HasIsPointerBlocker) {
      size += 1 + 1;
    }
    if (HasVisible) {
      size += 1 + 1;
    }
    if (Src.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Src);
    }
    if (HasAssetId) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
    }
    if (HasStyle) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Style);
    }
    if (color_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PBNFTShape other) {
    if (other == null) {
      return;
    }
    if (other.HasWithCollisions) {
      WithCollisions = other.WithCollisions;
    }
    if (other.HasIsPointerBlocker) {
      IsPointerBlocker = other.IsPointerBlocker;
    }
    if (other.HasVisible) {
      Visible = other.Visible;
    }
    if (other.Src.Length != 0) {
      Src = other.Src;
    }
    if (other.HasAssetId) {
      AssetId = other.AssetId;
    }
    if (other.HasStyle) {
      Style = other.Style;
    }
    if (other.color_ != null) {
      if (color_ == null) {
        Color = new global::Color3();
      }
      Color.MergeFrom(other.Color);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          WithCollisions = input.ReadBool();
          break;
        }
        case 16: {
          IsPointerBlocker = input.ReadBool();
          break;
        }
        case 24: {
          Visible = input.ReadBool();
          break;
        }
        case 34: {
          Src = input.ReadString();
          break;
        }
        case 42: {
          AssetId = input.ReadString();
          break;
        }
        case 48: {
          Style = input.ReadInt32();
          break;
        }
        case 58: {
          if (color_ == null) {
            Color = new global::Color3();
          }
          input.ReadMessage(Color);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          WithCollisions = input.ReadBool();
          break;
        }
        case 16: {
          IsPointerBlocker = input.ReadBool();
          break;
        }
        case 24: {
          Visible = input.ReadBool();
          break;
        }
        case 34: {
          Src = input.ReadString();
          break;
        }
        case 42: {
          AssetId = input.ReadString();
          break;
        }
        case 48: {
          Style = input.ReadInt32();
          break;
        }
        case 58: {
          if (color_ == null) {
            Color = new global::Color3();
          }
          input.ReadMessage(Color);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
