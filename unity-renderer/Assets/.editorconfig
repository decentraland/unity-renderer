# Top-most EditorConfig file. Remove the line below if you want to inherit .editorconfig settings from higher directories.
root = true

[*]
indent_style = space # Don't use tabs for indentation.

[*.cs]
charset = utf-8
indent_size = 4
tab_width = 4
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true
#max_line_length = 180

dotnet_analyzer_diagnostic.category-Style.severity = warning
dotnet_style_allow_multiple_blank_lines_experimental = false

###############################
#     Naming Conventions     #
###############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules

dotnet_diagnostic.IDE1006.severity = warning # Global severity of naming violations 

#### PascalCase ####
# By default, name items with PascalCase
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style
dotnet_naming_rule.members_should_be_pascal_case.severity = warning

# Interfaces are PascalCase with I prefix
dotnet_naming_style.i_prefix_pascal_case_style.capitalization = pascal_case
dotnet_naming_style.i_prefix_pascal_case_style.required_prefix = I

dotnet_naming_symbols.interfaces.applicable_kinds = interface

dotnet_naming_rule.interfaces_should_be_pascal_case_with_i_prefix.symbols = interfaces
dotnet_naming_rule.interfaces_should_be_pascal_case_with_i_prefix.style = i_prefix_pascal_case_style
dotnet_naming_rule.interfaces_should_be_pascal_case_with_i_prefix.severity = warning

# Asynchronous methods end with "Async"
dotnet_naming_style.async_postfix_pascal_case_style.capitalization = pascal_case
dotnet_naming_style.async_postfix_pascal_case_style.required_suffix = Async

dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.required_modifiers = async

dotnet_naming_rule.async_methods_should_be_pascal_case_with_async_suffix.symbols = async_methods
dotnet_naming_rule.async_methods_should_be_pascal_case_with_async_suffix.style = async_postfix_pascal_case_style
dotnet_naming_rule.async_methods_should_be_pascal_case_with_async_suffix.severity = error


#### CAPITALS_SNAKE_CASE ####
dotnet_naming_style.capital_snake_case_style.capitalization = all_upper

# Constants are CAPITALS_SNAKE_CASE
dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_rule.constants_should_be_capital_snake_case.symbols = constants
dotnet_naming_rule.constants_should_be_capital_snake_case.style = capital_snake_case_style
dotnet_naming_rule.constants_should_be_capital_snake_case.severity = warning

# Static readonly are CAPITALS_SNAKE_CASE
dotnet_naming_symbols.static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_rule.static_readonly_should_be_capital_snake_case.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_should_be_capital_snake_case.style = capital_snake_case_style
dotnet_naming_rule.static_readonly_should_be_capital_snake_case.severity = warning


#### camelCase ####
# Non-public Fields, Properties, methods Parameters and local Variables are camelCase
dotnet_naming_style.camel_case_style.capitalization = camel_case

dotnet_naming_symbols.non_public_members.applicable_kinds = field, property, parameter, local
dotnet_naming_symbols.non_public_members.applicable_accessibilities = internal, private, protected, protected_internal, private_protected, local

dotnet_naming_rule.non_public_members_should_be_camel_case.symbols = non_public_members
dotnet_naming_rule.non_public_members_should_be_camel_case.style = camel_case_style
dotnet_naming_rule.non_public_members_should_be_camel_case.severity = warning


###############################
#     Formatting Conventions  #
###############################

#### Order of using directives ####
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/dotnet-formatting-options

dotnet_diagnostic.IDE0065.severity = warning

csharp_using_directive_placement = outside_namespace

dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

#### Braces and spaces #### 
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options

# New-line options
csharp_new_line_before_open_brace = methods, properties, control_blocks, types # all?
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true

#csharp_new_line_before_members_in_object_initializers = true
#csharp_new_line_before_members_in_anonymous_types = true

csharp_new_line_between_query_expression_clauses = true

# Indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

# Spacing options
csharp_space_after_cast = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = control_flow_statements
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Wrap options
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

###############################
#     Language rules          # 
###############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/language-rules

# this. preferences
dotnet_diagnostic.IDE0003.severity = warning
dotnet_diagnostic.IDE0009.severity = warning

dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
#dotnet_style_qualification_for_method = false
#dotnet_style_qualification_for_event = false

# Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = warning

dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Modifier preferences 
dotnet_diagnostic.IDE0036.severity = none
#csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

dotnet_diagnostic.IDE0040.severity = warning
dotnet_style_require_accessibility_modifiers = always

dotnet_diagnostic.IDE0044.severity = warning
dotnet_style_readonly_field = true

dotnet_diagnostic.IDE0062.severity = warning
csharp_prefer_static_local_function = true

dotnet_diagnostic.IDE0064.severity = warning # Make struct fields writable

# Parentheses preferences
dotnet_diagnostic.IDE0048.severity = warning
#dotnet_diagnostic.IDE0047.severity = warning # - for removing braces, when another then "always for clarity" is used

dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = always_for_clarity

# Expression-level preferences
dotnet_diagnostic.IDE0010.severity = suggestion # Add missing cases to switch statement

dotnet_diagnostic.IDE0017.severity = suggestion
dotnet_style_object_initializer = true

dotnet_diagnostic.IDE0018.severity = warning
csharp_style_inlined_variable_declaration = true

dotnet_diagnostic.IDE0028.severity = suggestion
dotnet_style_collection_initializer = true

dotnet_diagnostic.IDE0032.severity = warning
dotnet_style_prefer_auto_properties = true

dotnet_diagnostic.IDE0033.severity = warning
dotnet_style_explicit_tuple_names = true

dotnet_diagnostic.IDE0034.severity = suggestion
csharp_prefer_simple_default_expression = true

dotnet_diagnostic.IDE0037.severity = suggestion
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true

#csharp_style_prefer_local_over_anonymous_function = true #IDE0039
#csharp_style_deconstructed_variable_declaration = true #IDE0042

dotnet_diagnostic.IDE0045.severity = warning
dotnet_style_prefer_conditional_expression_over_assignment = true

dotnet_diagnostic.IDE0046.severity = warning
dotnet_style_prefer_conditional_expression_over_return = true

dotnet_diagnostic.IDE0050.severity = warning # Convert anonymous type to tuple

dotnet_diagnostic.IDE0054.severity = suggestion
#dotnet_diagnostic.IDE0074.severity = none #- when set to false
dotnet_style_prefer_compound_assignment = true

dotnet_diagnostic.IDE0056.severity = warning
csharp_style_prefer_index_operator = true

dotnet_diagnostic.IDE0057.severity = warning
csharp_style_prefer_range_operator = true

dotnet_diagnostic.IDE0070.severity = suggestion

dotnet_diagnostic.IDE0071.severity = warning
dotnet_style_prefer_simplified_interpolation = true

#dotnet_diagnostic.IDE0072.severity = none # Add missing cases to switch expression

dotnet_diagnostic.IDE0075.severity = suggestion
dotnet_style_prefer_simplified_boolean_expressions = true

dotnet_diagnostic.IDE0082.severity = warning # Convert typeof to nameof

#csharp_style_implicit_object_creation_when_type_is_apparent = false #-Simplify new expression (IDE0090), C# 9.0

dotnet_diagnostic.IDE0180.severity = warning # Use tuple to swap values

# Namespace declaration preferences
dotnet_diagnostic.IDE0160.severity = warning
#dotnet_diagnostic.IDE0161.severity = warning #- for file-scoped value
csharp_style_namespace_declarations = block_scoped

# Null-checking preferences
dotnet_diagnostic.IDE0016.severity = warning
csharp_style_throw_expression = true

dotnet_diagnostic.IDE0029.severity = warning
dotnet_diagnostic.IDE0030.severity = warning
dotnet_style_coalesce_expression = true

dotnet_diagnostic.IDE0031.severity = warning
dotnet_style_null_propagation = true

dotnet_diagnostic.IDE0041.severity = warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true

dotnet_diagnostic.IDE0150.severity = warning
csharp_style_prefer_null_check_over_type_check = true

dotnet_diagnostic.IDE1005.severity = warning
csharp_style_conditional_delegate_call = true

# 'var' preferences
dotnet_diagnostic.IDE0007.severity = suggestion
dotnet_diagnostic.IDE0008.severity = suggestion
csharp_style_var_when_type_is_apparent = true
#csharp_style_var_for_built_in_types = true
#csharp_style_var_elsewhere = false

# Expression-bodied-members
dotnet_diagnostic.IDE0021.severity = warning
csharp_style_expression_bodied_constructors = false

dotnet_diagnostic.IDE0022.severity = suggestion
csharp_style_expression_bodied_methods = true

dotnet_diagnostic.IDE0023.severity = warning
dotnet_diagnostic.IDE0024.severity = warning
csharp_style_expression_bodied_operators = true

dotnet_diagnostic.IDE0025.severity = warning
csharp_style_expression_bodied_properties = true

dotnet_diagnostic.IDE0026.severity = warning
csharp_style_expression_bodied_indexers = true

dotnet_diagnostic.IDE0027.severity = warning
csharp_style_expression_bodied_accessors = true

dotnet_diagnostic.IDE0053.severity = warning
csharp_style_expression_bodied_lambdas = true

dotnet_diagnostic.IDE0061.severity = warning
csharp_style_expression_bodied_local_functions = true

# Pattern matching preferences
dotnet_diagnostic.IDE0019.severity = warning
csharp_style_pattern_matching_over_as_with_null_check = true

dotnet_diagnostic.IDE0020.severity = suggestion
#dotnet_diagnostic.IDE0038.severity = suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true

dotnet_diagnostic.IDE0066.severity = warning
csharp_style_prefer_switch_expression = true

dotnet_diagnostic.IDE0078.severity = warning
csharp_style_prefer_pattern_matching = true

dotnet_diagnostic.IDE0083.severity = warning
csharp_style_prefer_not_pattern = true

dotnet_diagnostic.IDE0170.severity = warning
csharp_style_prefer_extended_property_pattern = true

# Code block preferences
dotnet_diagnostic.IDE0011.severity = suggestion
csharp_prefer_braces = false

dotnet_diagnostic.IDE0063.severity = suggestion
csharp_prefer_simple_using_statement = true

dotnet_diagnostic.IDE0073.severity = none
file_header_template = unset

###############################
#   Unnecessary code rules    # 
###############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/unnecessary-code-rules

dotnet_diagnostic.IDE0001.severity = suggestion # simplified type names: System.IO.FileInfo file -> FileInfo file;
dotnet_diagnostic.IDE0002.severity = suggestion # simplified type member access: C.M1(); -> M1();
dotnet_diagnostic.IDE0004.severity = warning # Remove unnecessary cast
dotnet_diagnostic.IDE0005.severity = warning # Remove unnecessary using directives
dotnet_diagnostic.IDE0035.severity = warning # Remove unreachable code
dotnet_diagnostic.IDE0051.severity = warning # Remove unused private member
dotnet_diagnostic.IDE0052.severity = warning # Remove unread private member

dotnet_diagnostic.IDE0058.severity = warning
csharp_style_unused_value_expression_statement_preference = discard_variable

dotnet_diagnostic.IDE0059.severity = warning
csharp_style_unused_value_assignment_preference = discard_variable

dotnet_diagnostic.IDE0060.severity = warning
dotnet_code_quality_unused_parameters = all

#dotnet_diagnostic.IDE0079.severity = ?
#dotnet_remove_unnecessary_suppression_exclusions = ? 

dotnet_diagnostic.IDE0080.severity = warning # Remove unnecessary suppression operator
dotnet_diagnostic.IDE0081.severity = warning # Remove ByVal
dotnet_diagnostic.IDE0100.severity = warning # Remove unnecessary equality operator when comparing a non-constant Boolean expression
dotnet_diagnostic.IDE0110.severity = warning # Remove unnecessary discard

###############################
#    Miscellaneous rules      # 
###############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/miscellaneous-rules
dotnet_diagnostic.IDE0076.severity = warning # Remove invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0077.severity =  warning # Avoid legacy format target in global 'SuppressMessageAttribute'


###############################
#       Re-sharper           # 
###############################
# https://www.jetbrains.com/help/rider/EditorConfig_Generalized.html

### Blank Lines ###
# https://www.jetbrains.com/help/rider/EditorConfig_CSHARP_BlankLinesPageScheme.html

# General
resharper_blank_lines_around_region = 1
resharper_blank_lines_inside_region = 0
resharper_blank_lines_before_single_line_comment = 1

# Blank lines in declarations
resharper_keep_blank_lines_in_declarations = 1

resharper_remove_blank_lines_near_braces_in_declarations = true

resharper_blank_lines_after_start_comment = 0
resharper_blank_lines_between_using_groups = 0
resharper_blank_lines_after_using_list = 1
resharper_blank_lines_around_namespace = 1
resharper_blank_lines_inside_namespace = 0
resharper_blank_lines_after_file_scoped_namespace_directive = 1
resharper_blank_lines_around_type = 1
resharper_blank_lines_around_single_line_type = 0
resharper_blank_lines_around_field = 0
resharper_blank_lines_around_single_line_field = 0
resharper_blank_lines_around_property = 1
resharper_blank_lines_around_single_line_property = 0
resharper_blank_lines_around_auto_property = 0
resharper_blank_lines_around_single_line_auto_property = 0
resharper_blank_lines_around_accessor = 1
resharper_blank_lines_around_single_line_accessor = 0
resharper_blank_lines_around_invocable = 1
resharper_blank_lines_around_single_line_invocable = 1

# Blank lines in code
resharper_keep_blank_lines_in_code = 1
resharper_remove_blank_lines_near_braces_in_code = true
resharper_blank_lines_around_local_method = 1
resharper_blank_lines_around_single_line_local_method = 0
resharper_blank_lines_before_control_transfer_statements = 1
resharper_blank_lines_after_control_transfer_statements = 0
resharper_blank_lines_before_block_statements = 1
resharper_blank_lines_after_block_statements = 1
resharper_blank_lines_before_multiline_statements = 1
resharper_blank_lines_after_multiline_statements = 1
resharper_blank_lines_around_block_case_section = 0
resharper_blank_lines_around_multiline_case_section = 0
resharper_blank_lines_before_case = 0
resharper_blank_lines_after_case = 0

### Braces Layout ###
# https://www.jetbrains.com/help/rider/EditorConfig_CSHARP_BracesPageSchema.html

resharper_brace_style = next_line
resharper_indent_inside_namespace = true
resharper_use_continuous_indent_inside_initializer_braces = false
resharper_allow_comment_after_lbrace = true
resharper_empty_block_style = together_same_line

### Syntax Style ###
# https://www.jetbrains.com/help/rider/EditorConfig_CSHARP_CSharpCodeStylePageImplSchema.html

# 'var' usage in declarations
resharper_for_built_in_types = use_var_when_evident
resharper_for_simple_types = use_var_when_evident
resharper_for_other_types = use_var_when_evident
resharper_use_roslyn_logic_for_evident_types = true

resharper_prefer_separate_deconstructed_variables_declaration = false # ???
resharper_prefer_explicit_discard_declaration = false # ???

# Instance members qualification
resharper_instance_members_qualify_members = none
resharper_instance_members_qualify_declared_in = this_class, base_class

# Static members qualification
resharper_static_members_qualify_with = declared_type
resharper_static_members_qualify_members = none

# Built-in types
resharper_builtin_type_reference_style = use_keyword
resharper_builtin_type_reference_for_member_access_style = use_keyword

# Reference qualification and 'using' directives
resharper_prefer_qualified_reference = false
resharper_add_imports_to_deepest_scope = false
resharper_sort_usings_with_system_first = false
resharper_qualified_using_at_nested_scope = false
resharper_allow_alias = true
resharper_can_use_global_alias = true

# Modifiers
resharper_default_private_modifier = explicit
resharper_default_internal_modifier = explicit
#resharper_modifiers_order = 

# Arguments
resharper_arguments_skip_single = false
resharper_arguments_literal = positional
resharper_arguments_string_literal = positional
resharper_arguments_named = positional
resharper_arguments_anonymous_function = positional
resharper_arguments_other = positional

# Parentheses

resharper_parentheses_redundancy_style = remove_if_not_clarifies_precedence
#resharper_parentheses_non_obvious_operations = ??
#resharper_parentheses_group_non_obvious_operations = ??
#resharper_parentheses_same_type_operations = ??

# Braces
resharper_braces_for_ifelse = not_required
resharper_braces_for_for = not_required
resharper_braces_for_foreach = not_required
resharper_braces_for_while = not_required
resharper_braces_for_dowhile = not_required
resharper_braces_for_using = not_required
resharper_braces_for_lock = required
resharper_braces_for_fixed = required

# Code body
resharper_method_or_operator_body = expression_body
resharper_local_function_body = expression_body
resharper_constructor_or_destructor_body = block_body
resharper_accessor_owner_body = expression_body
resharper_namespace_body = block_scoped
resharper_use_heuristics_for_body_style = true

# Attributes
#resharper_force_attribute_style = join

# Trailing comma
resharper_trailing_comma_in_multiline_lists = true
resharper_trailing_comma_in_singleline_lists = false

# Object creation
resharper_object_creation_when_type_evident = target_typed
resharper_object_creation_when_type_not_evident = explicitly_typed

# Default value
resharper_default_value_when_type_evident = default_expression
resharper_default_value_when_type_not_evident = default_expression

### C#: Tabs, Indents, Alignment ###
# https://www.jetbrains.com/help/rider/EditorConfig_CSHARP_CSharpIndentStylePageSchema.html

# General
resharper_continuous_indent_multiplier = 1

resharper_indent_nested_usings_stmt = false
resharper_indent_nested_fixed_stmt = false
resharper_indent_nested_lock_stmt = false

resharper_indent_nested_for_stmt = true
resharper_indent_nested_foreach_stmt = true
resharper_indent_nested_while_stmt = true 

# Parenthesis
resharper_use_continuous_indent_inside_parens = true

resharper_indent_method_decl_pars = inside
resharper_indent_invocation_pars = inside
resharper_indent_statement_pars = inside
resharper_indent_typeparam_angles = inside
resharper_indent_typearg_angles = inside
resharper_indent_pars = inside

# Preprocessor directives
resharper_indent_preprocessor_if = no_indent
resharper_indent_preprocessor_region = no_indent
resharper_indent_preprocessor_other = no_indent

# Other indents
resharper_indent_switch_labels = true
resharper_outdent_statement_labels = true
resharper_indent_type_constraints = true
resharper_stick_comment = false
resharper_use_indent_from_previous_element = true
resharper_indent_braces_inside_statement_conditions = true

# Align multiline constructs
resharper_alignment_tab_fill_style = use_spaces
resharper_allow_far_alignment = false
resharper_align_multiline_extends_list = false
resharper_align_linq_query = false
resharper_align_multiline_binary_expressions_chain = true
resharper_outdent_binary_ops = false
resharper_align_multiline_calls_chain = true
resharper_outdent_dots = true
resharper_align_multiline_array_and_object_initializer = false
resharper_align_multiline_switch_expression = true
resharper_align_multiline_property_pattern = false
resharper_align_multiline_binary_patterns = false
resharper_outdent_binary_pattern_ops = false
resharper_indent_anonymous_method_block = false
resharper_align_first_arg_by_paren = false
resharper_align_multiline_argument = false
resharper_align_tuple_components = false
resharper_align_multiline_expression = false
resharper_align_multiline_statement_conditions = true
resharper_align_multiline_for_stmt = false
resharper_align_multiple_declaration = true
resharper_align_multline_type_parameter_list = false
resharper_align_multline_type_parameter_constrains = false
resharper_outdent_commas = true

# Align similar code in columns
resharper_int_align_fix_in_adjacent = true

#resharper_int_align = false
resharper_int_align_fields = false
resharper_int_align_properties = false
resharper_int_align_methods = false
resharper_int_align_parameters = false
resharper_int_align_variables = false
resharper_int_align_assignments = false
resharper_int_align_property_patterns = false
resharper_int_align_nested_ternary = false
resharper_int_align_invocations = false 
resharper_int_align_binary_expressions = false 
resharper_int_align_switch_sections = false 
resharper_int_align_switch_expressions = false 

resharper_int_align_comments = true

### C#: Line Breaks ###
# https://www.jetbrains.com/help/rider/EditorConfig_CSHARP_LineBreaksPageSchema.html

# General
resharper_keep_user_linebreaks = true 
resharper_keep_existing_linebreaks = true
#resharper_keep_existing_arrangement = false

resharper_wrap_before_comma = false
resharper_wrap_before_eq = false
resharper_special_else_if_treatment = true

# Arrangement of attributes
resharper_max_attribute_length_for_same_line = 40
resharper_keep_existing_attribute_arrangement = false

resharper_place_type_attribute_on_same_line = never
resharper_place_method_attribute_on_same_line = never
resharper_place_accessorholder_attribute_on_same_line = if_owner_is_single_line
resharper_place_accessor_attribute_on_same_line = always
resharper_place_field_attribute_on_same_line = if_owner_is_single_line
resharper_place_record_field_attribute_on_same_line = if_owner_is_single_line

# Arrangement of method signatures
resharper_wrap_parameters_style = wrap_if_long
resharper_max_formal_parameters_on_line = 3

resharper_keep_existing_declaration_parens_arrangement = true
resharper_wrap_before_declaration_lpar = false
resharper_wrap_after_declaration_lpar = false
resharper_wrap_before_declaration_rpar = false
resharper_place_constructor_initializer_on_same_line = true

# Arrangement of expression bodied members
resharper_keep_existing_expr_member_arrangement = false
resharper_place_expr_method_on_single_line = never
resharper_place_expr_property_on_single_line = always
resharper_place_expr_accessor_on_single_line = always
resharper_wrap_before_arrow_with_expressions = false

# Arrangement of type parameters, constraints and base types
resharper_place_type_constraints_on_same_line = true
resharper_wrap_before_first_type_parameter_constraint = false
resharper_wrap_multiple_type_parameter_constraints_style = wrap_if_long
resharper_wrap_before_type_parameter_langle = false
resharper_wrap_before_extends_colon = false
resharper_wrap_extends_list_style = wrap_if_long

# Arrangement of declaration blocks

#resharper_place_simple_blocks_on_single_line = false
#resharper_place_simple_declaration_blocks_on_single_line = false

resharper_keep_existing_declaration_block_arrangement = false
resharper_place_abstract_accessorholder_on_single_line = true
resharper_place_simple_accessorholder_on_single_line = false
resharper_place_accessor_with_attrs_holder_on_single_line = false
resharper_place_simple_accessor_on_single_line = true
resharper_place_simple_method_on_single_line = false

# Arrangement of enumerations
resharper_keep_existing_enum_arrangement = false
resharper_max_enum_members_on_line = 3
resharper_place_simple_enum_on_single_line = true
resharper_wrap_enum_declaration = wrap_if_long

# Arrangement of statements
resharper_new_line_before_else = true
resharper_new_line_before_catch = true
resharper_new_line_before_finally = true
resharper_new_line_before_while = true

resharper_wrap_for_stmt_header_style = wrap_if_long
resharper_wrap_multiple_declaration_style = wrap_if_long

# Arrangement of embedded statements
resharper_keep_existing_embedded_arrangement = false
resharper_place_simple_embedded_statement_on_same_line = if_owner_is_single_line
resharper_place_simple_case_statement_on_same_line = always

# Arrangement of embedded blocks
resharper_keep_existing_embedded_block_arrangement = false
resharper_place_simple_embedded_block_on_same_line = true
resharper_place_simple_anonymousmethod_on_single_line = true 

# Arrangement of switch expressions
resharper_keep_existing_switch_expression_arrangement = false
resharper_place_simple_switch_expression_on_single_line = false
resharper_wrap_switch_expression = chop_always

# Arrangement of property patterns
resharper_keep_existing_property_patterns_arrangement = false
resharper_place_simple_property_pattern_on_single_line = true
resharper_wrap_property_pattern = wrap_if_long

# Arrangement of initializers
resharper_keep_existing_initializer_arrangement = false
resharper_place_simple_initializer_on_single_line = true
resharper_max_initializer_elements_on_line = 3
resharper_wrap_object_and_collection_initializer_style = chop_if_long
resharper_max_array_initializer_elements_on_line = 10000
resharper_wrap_array_initializer_style = wrap_if_long

# Arrangement of invocations
resharper_wrap_arguments_style = wrap_if_long
resharper_max_invocation_arguments_on_line = 10000
resharper_keep_existing_invocation_parens_arrangement = true
resharper_wrap_before_invocation_lpar = false
resharper_wrap_after_invocation_lpar = false
resharper_wrap_before_invocation_rpar = false

# Arrangement of member access expressions
resharper_wrap_after_dot_in_method_calls = true
resharper_wrap_chained_method_calls = wrap_if_long

# Arrangement of binary expressions
resharper_wrap_before_binary_opsign = true
resharper_wrap_chained_binary_expressions = wrap_if_long
resharper_wrap_before_binary_pattern_op = true
resharper_wrap_chained_binary_patterns = wrap_if_long
resharper_force_chop_compound_if_expression = false
resharper_force_chop_compound_while_expression = false
resharper_force_chop_compound_do_expression = false

# Arrangement of ternary expressions
resharper_wrap_before_ternary_opsigns = true
resharper_wrap_ternary_expr_style = chop_if_long
resharper_nested_ternary_style = compact

# Arrangement of LINQ expressions
resharper_wrap_linq_expressions = wrap_if_long
resharper_wrap_before_linq_expression = false
resharper_place_linq_into_on_new_line = false 

# Arrangement of interpolated strings
resharper_wrap_verbatim_interpolated_strings = no_wrap

