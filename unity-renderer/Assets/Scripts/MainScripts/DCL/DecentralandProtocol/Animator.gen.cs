// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: decentraland/sdk/components/animator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DCL.ECSComponents {

  /// <summary>Holder for reflection information generated from decentraland/sdk/components/animator.proto</summary>
  public static partial class AnimatorReflection {

    #region Descriptor
    /// <summary>File descriptor for decentraland/sdk/components/animator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AnimatorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipkZWNlbnRyYWxhbmQvc2RrL2NvbXBvbmVudHMvYW5pbWF0b3IucHJvdG8S",
            "G2RlY2VudHJhbGFuZC5zZGsuY29tcG9uZW50cyJLCgpQQkFuaW1hdG9yEj0K",
            "BnN0YXRlcxgBIAMoCzItLmRlY2VudHJhbGFuZC5zZGsuY29tcG9uZW50cy5Q",
            "QkFuaW1hdGlvblN0YXRlItYBChBQQkFuaW1hdGlvblN0YXRlEgwKBG5hbWUY",
            "ASABKAkSDAoEY2xpcBgCIAEoCRIUCgdwbGF5aW5nGAMgASgISACIAQESEwoG",
            "d2VpZ2h0GAQgASgCSAGIAQESEgoFc3BlZWQYBSABKAJIAogBARIRCgRsb29w",
            "GAYgASgISAOIAQESGQoMc2hvdWxkX3Jlc2V0GAcgASgISASIAQFCCgoIX3Bs",
            "YXlpbmdCCQoHX3dlaWdodEIICgZfc3BlZWRCBwoFX2xvb3BCDwoNX3Nob3Vs",
            "ZF9yZXNldEIUqgIRRENMLkVDU0NvbXBvbmVudHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.PBAnimator), global::DCL.ECSComponents.PBAnimator.Parser, new[]{ "States" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.PBAnimationState), global::DCL.ECSComponents.PBAnimationState.Parser, new[]{ "Name", "Clip", "Playing", "Weight", "Speed", "Loop", "ShouldReset" }, new[]{ "Playing", "Weight", "Speed", "Loop", "ShouldReset" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The Animator component is a container for multiple potential animations an Entity can display,
  /// separately or at the same time. It can be used to start, stop or blend animations; as well as
  /// to inspect their playback state.
  ///
  /// Animations have a `weight` property, which determines how pronounced the animation will be. This
  /// can be adjusted to blend animations together, or gracefully transition from one to the next.
  /// </summary>
  public sealed partial class PBAnimator : pb::IMessage<PBAnimator>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PBAnimator> _parser = new pb::MessageParser<PBAnimator>(() => new PBAnimator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PBAnimator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DCL.ECSComponents.AnimatorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBAnimator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBAnimator(PBAnimator other) : this() {
      states_ = other.states_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBAnimator Clone() {
      return new PBAnimator(this);
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::DCL.ECSComponents.PBAnimationState> _repeated_states_codec
        = pb::FieldCodec.ForMessage(10, global::DCL.ECSComponents.PBAnimationState.Parser);
    private readonly pbc::RepeatedField<global::DCL.ECSComponents.PBAnimationState> states_ = new pbc::RepeatedField<global::DCL.ECSComponents.PBAnimationState>();
    /// <summary>
    /// a collection of animations and their current state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::DCL.ECSComponents.PBAnimationState> States {
      get { return states_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PBAnimator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PBAnimator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!states_.Equals(other.states_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= states_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      states_.WriteTo(output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      states_.WriteTo(ref output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += states_.CalculateSize(_repeated_states_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PBAnimator other) {
      if (other == null) {
        return;
      }
      states_.Add(other.states_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            states_.AddEntriesFrom(ref input, _repeated_states_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AnimationState indicates the status and configuration of one available animation.
  /// </summary>
  public sealed partial class PBAnimationState : pb::IMessage<PBAnimationState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PBAnimationState> _parser = new pb::MessageParser<PBAnimationState>(() => new PBAnimationState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PBAnimationState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DCL.ECSComponents.AnimatorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBAnimationState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBAnimationState(PBAnimationState other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      clip_ = other.clip_;
      playing_ = other.playing_;
      weight_ = other.weight_;
      speed_ = other.speed_;
      loop_ = other.loop_;
      shouldReset_ = other.shouldReset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBAnimationState Clone() {
      return new PBAnimationState(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// the identifier for this animation, to use in scene code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clip" field.</summary>
    public const int ClipFieldNumber = 2;
    private string clip_ = "";
    /// <summary>
    /// the animation path in the `files` array of the scene manifest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clip {
      get { return clip_; }
      set {
        clip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playing" field.</summary>
    public const int PlayingFieldNumber = 3;
    private bool playing_;
    /// <summary>
    /// whether this animation is currently playing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Playing {
      get { if ((_hasBits0 & 1) != 0) { return playing_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        playing_ = value;
      }
    }
    /// <summary>Gets whether the "playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaying {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaying() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 4;
    private float weight_;
    /// <summary>
    /// the "weight" of this animation (see below, default: 1.0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Weight {
      get { if ((_hasBits0 & 2) != 0) { return weight_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        weight_ = value;
      }
    }
    /// <summary>Gets whether the "weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 5;
    private float speed_;
    /// <summary>
    /// the playback speed (default: 1.0)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Speed {
      get { if ((_hasBits0 & 4) != 0) { return speed_; } else { return 0F; } }
      set {
        _hasBits0 |= 4;
        speed_ = value;
      }
    }
    /// <summary>Gets whether the "speed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpeed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "speed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpeed() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "loop" field.</summary>
    public const int LoopFieldNumber = 6;
    private bool loop_;
    /// <summary>
    /// whether the animation repeats until stopped (default: true)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Loop {
      get { if ((_hasBits0 & 8) != 0) { return loop_; } else { return false; } }
      set {
        _hasBits0 |= 8;
        loop_ = value;
      }
    }
    /// <summary>Gets whether the "loop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoop {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "loop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoop() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "should_reset" field.</summary>
    public const int ShouldResetFieldNumber = 7;
    private bool shouldReset_;
    /// <summary>
    /// whether the Entity is restored to its prior state when done
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShouldReset {
      get { if ((_hasBits0 & 16) != 0) { return shouldReset_; } else { return false; } }
      set {
        _hasBits0 |= 16;
        shouldReset_ = value;
      }
    }
    /// <summary>Gets whether the "should_reset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShouldReset {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "should_reset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShouldReset() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PBAnimationState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PBAnimationState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Clip != other.Clip) return false;
      if (Playing != other.Playing) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Weight, other.Weight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (Loop != other.Loop) return false;
      if (ShouldReset != other.ShouldReset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Clip.Length != 0) hash ^= Clip.GetHashCode();
      if (HasPlaying) hash ^= Playing.GetHashCode();
      if (HasWeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Weight);
      if (HasSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (HasLoop) hash ^= Loop.GetHashCode();
      if (HasShouldReset) hash ^= ShouldReset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Clip.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Clip);
      }
      if (HasPlaying) {
        output.WriteRawTag(24);
        output.WriteBool(Playing);
      }
      if (HasWeight) {
        output.WriteRawTag(37);
        output.WriteFloat(Weight);
      }
      if (HasSpeed) {
        output.WriteRawTag(45);
        output.WriteFloat(Speed);
      }
      if (HasLoop) {
        output.WriteRawTag(48);
        output.WriteBool(Loop);
      }
      if (HasShouldReset) {
        output.WriteRawTag(56);
        output.WriteBool(ShouldReset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Clip.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Clip);
      }
      if (HasPlaying) {
        output.WriteRawTag(24);
        output.WriteBool(Playing);
      }
      if (HasWeight) {
        output.WriteRawTag(37);
        output.WriteFloat(Weight);
      }
      if (HasSpeed) {
        output.WriteRawTag(45);
        output.WriteFloat(Speed);
      }
      if (HasLoop) {
        output.WriteRawTag(48);
        output.WriteBool(Loop);
      }
      if (HasShouldReset) {
        output.WriteRawTag(56);
        output.WriteBool(ShouldReset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Clip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clip);
      }
      if (HasPlaying) {
        size += 1 + 1;
      }
      if (HasWeight) {
        size += 1 + 4;
      }
      if (HasSpeed) {
        size += 1 + 4;
      }
      if (HasLoop) {
        size += 1 + 1;
      }
      if (HasShouldReset) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PBAnimationState other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Clip.Length != 0) {
        Clip = other.Clip;
      }
      if (other.HasPlaying) {
        Playing = other.Playing;
      }
      if (other.HasWeight) {
        Weight = other.Weight;
      }
      if (other.HasSpeed) {
        Speed = other.Speed;
      }
      if (other.HasLoop) {
        Loop = other.Loop;
      }
      if (other.HasShouldReset) {
        ShouldReset = other.ShouldReset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Clip = input.ReadString();
            break;
          }
          case 24: {
            Playing = input.ReadBool();
            break;
          }
          case 37: {
            Weight = input.ReadFloat();
            break;
          }
          case 45: {
            Speed = input.ReadFloat();
            break;
          }
          case 48: {
            Loop = input.ReadBool();
            break;
          }
          case 56: {
            ShouldReset = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Clip = input.ReadString();
            break;
          }
          case 24: {
            Playing = input.ReadBool();
            break;
          }
          case 37: {
            Weight = input.ReadFloat();
            break;
          }
          case 45: {
            Speed = input.ReadFloat();
            break;
          }
          case 48: {
            Loop = input.ReadBool();
            break;
          }
          case 56: {
            ShouldReset = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
