// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: decentraland/sdk/components/video_player.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DCL.ECSComponents {

  /// <summary>Holder for reflection information generated from decentraland/sdk/components/video_player.proto</summary>
  public static partial class VideoPlayerReflection {

    #region Descriptor
    /// <summary>File descriptor for decentraland/sdk/components/video_player.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VideoPlayerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5kZWNlbnRyYWxhbmQvc2RrL2NvbXBvbmVudHMvdmlkZW9fcGxheWVyLnBy",
            "b3RvEhtkZWNlbnRyYWxhbmQuc2RrLmNvbXBvbmVudHMizAEKDVBCVmlkZW9Q",
            "bGF5ZXISCwoDc3JjGAEgASgJEhQKB3BsYXlpbmcYAiABKAhIAIgBARIVCghw",
            "b3NpdGlvbhgDIAEoAkgBiAEBEhMKBnZvbHVtZRgEIAEoAkgCiAEBEhoKDXBs",
            "YXliYWNrX3JhdGUYBSABKAJIA4gBARIRCgRsb29wGAYgASgISASIAQFCCgoI",
            "X3BsYXlpbmdCCwoJX3Bvc2l0aW9uQgkKB192b2x1bWVCEAoOX3BsYXliYWNr",
            "X3JhdGVCBwoFX2xvb3BCFKoCEURDTC5FQ1NDb21wb25lbnRzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.PBVideoPlayer), global::DCL.ECSComponents.PBVideoPlayer.Parser, new[]{ "Src", "Playing", "Position", "Volume", "PlaybackRate", "Loop" }, new[]{ "Playing", "Position", "Volume", "PlaybackRate", "Loop" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PBVideoPlayer : pb::IMessage<PBVideoPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PBVideoPlayer> _parser = new pb::MessageParser<PBVideoPlayer>(() => new PBVideoPlayer());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PBVideoPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DCL.ECSComponents.VideoPlayerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBVideoPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBVideoPlayer(PBVideoPlayer other) : this() {
      _hasBits0 = other._hasBits0;
      src_ = other.src_;
      playing_ = other.playing_;
      position_ = other.position_;
      volume_ = other.volume_;
      playbackRate_ = other.playbackRate_;
      loop_ = other.loop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBVideoPlayer Clone() {
      return new PBVideoPlayer(this);
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 1;
    private string src_ = "";
    /// <summary>
    /// which file to load
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Src {
      get { return src_; }
      set {
        src_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playing" field.</summary>
    public const int PlayingFieldNumber = 2;
    private bool playing_;
    /// <summary>
    /// default true
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Playing {
      get { if ((_hasBits0 & 1) != 0) { return playing_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        playing_ = value;
      }
    }
    /// <summary>Gets whether the "playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaying {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaying() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private float position_;
    /// <summary>
    /// default 0.0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Position {
      get { if ((_hasBits0 & 2) != 0) { return position_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        position_ = value;
      }
    }
    /// <summary>Gets whether the "position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosition {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosition() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private float volume_;
    /// <summary>
    /// default 1.0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Volume {
      get { if ((_hasBits0 & 4) != 0) { return volume_; } else { return 0F; } }
      set {
        _hasBits0 |= 4;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "playback_rate" field.</summary>
    public const int PlaybackRateFieldNumber = 5;
    private float playbackRate_;
    /// <summary>
    /// default 1.0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PlaybackRate {
      get { if ((_hasBits0 & 8) != 0) { return playbackRate_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        playbackRate_ = value;
      }
    }
    /// <summary>Gets whether the "playback_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaybackRate {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "playback_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaybackRate() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "loop" field.</summary>
    public const int LoopFieldNumber = 6;
    private bool loop_;
    /// <summary>
    /// default false
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Loop {
      get { if ((_hasBits0 & 16) != 0) { return loop_; } else { return false; } }
      set {
        _hasBits0 |= 16;
        loop_ = value;
      }
    }
    /// <summary>Gets whether the "loop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoop {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "loop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoop() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PBVideoPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PBVideoPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Src != other.Src) return false;
      if (Playing != other.Playing) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Position, other.Position)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlaybackRate, other.PlaybackRate)) return false;
      if (Loop != other.Loop) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Src.Length != 0) hash ^= Src.GetHashCode();
      if (HasPlaying) hash ^= Playing.GetHashCode();
      if (HasPosition) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Position);
      if (HasVolume) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (HasPlaybackRate) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlaybackRate);
      if (HasLoop) hash ^= Loop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Src.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Src);
      }
      if (HasPlaying) {
        output.WriteRawTag(16);
        output.WriteBool(Playing);
      }
      if (HasPosition) {
        output.WriteRawTag(29);
        output.WriteFloat(Position);
      }
      if (HasVolume) {
        output.WriteRawTag(37);
        output.WriteFloat(Volume);
      }
      if (HasPlaybackRate) {
        output.WriteRawTag(45);
        output.WriteFloat(PlaybackRate);
      }
      if (HasLoop) {
        output.WriteRawTag(48);
        output.WriteBool(Loop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Src.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Src);
      }
      if (HasPlaying) {
        output.WriteRawTag(16);
        output.WriteBool(Playing);
      }
      if (HasPosition) {
        output.WriteRawTag(29);
        output.WriteFloat(Position);
      }
      if (HasVolume) {
        output.WriteRawTag(37);
        output.WriteFloat(Volume);
      }
      if (HasPlaybackRate) {
        output.WriteRawTag(45);
        output.WriteFloat(PlaybackRate);
      }
      if (HasLoop) {
        output.WriteRawTag(48);
        output.WriteBool(Loop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Src.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Src);
      }
      if (HasPlaying) {
        size += 1 + 1;
      }
      if (HasPosition) {
        size += 1 + 4;
      }
      if (HasVolume) {
        size += 1 + 4;
      }
      if (HasPlaybackRate) {
        size += 1 + 4;
      }
      if (HasLoop) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PBVideoPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Src.Length != 0) {
        Src = other.Src;
      }
      if (other.HasPlaying) {
        Playing = other.Playing;
      }
      if (other.HasPosition) {
        Position = other.Position;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasPlaybackRate) {
        PlaybackRate = other.PlaybackRate;
      }
      if (other.HasLoop) {
        Loop = other.Loop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Src = input.ReadString();
            break;
          }
          case 16: {
            Playing = input.ReadBool();
            break;
          }
          case 29: {
            Position = input.ReadFloat();
            break;
          }
          case 37: {
            Volume = input.ReadFloat();
            break;
          }
          case 45: {
            PlaybackRate = input.ReadFloat();
            break;
          }
          case 48: {
            Loop = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Src = input.ReadString();
            break;
          }
          case 16: {
            Playing = input.ReadBool();
            break;
          }
          case 29: {
            Position = input.ReadFloat();
            break;
          }
          case 37: {
            Volume = input.ReadFloat();
            break;
          }
          case 45: {
            PlaybackRate = input.ReadFloat();
            break;
          }
          case 48: {
            Loop = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
