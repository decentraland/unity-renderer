
// AUTOGENERATED, DO NOT EDIT
// Type definitions for server implementations of ports.
// package: decentraland.bff
// file: decentraland/bff/topics_service.proto
using Cysharp.Threading.Tasks;
using rpc_csharp;

namespace Decentraland.Bff {
public interface IClientTopicsService
{
  IUniTaskAsyncEnumerable<PeerTopicSubscriptionResultElem> PeerSubscription(SubscriptionRequest request);

  IUniTaskAsyncEnumerable<SystemTopicSubscriptionResultElem> SystemSubscription(SubscriptionRequest request);

  UniTask<PublishToTopicResult> PublishToTopic(PublishToTopicRequest request);
}

public class ClientTopicsService : IClientTopicsService
{
  private readonly RpcClientModule module;

  public ClientTopicsService(RpcClientModule module)
  {
      this.module = module;
  }

  
  public IUniTaskAsyncEnumerable<PeerTopicSubscriptionResultElem> PeerSubscription(SubscriptionRequest request)
  {
      return module.CallServerStream<PeerTopicSubscriptionResultElem>("PeerSubscription", request);
  }

  public IUniTaskAsyncEnumerable<SystemTopicSubscriptionResultElem> SystemSubscription(SubscriptionRequest request)
  {
      return module.CallServerStream<SystemTopicSubscriptionResultElem>("SystemSubscription", request);
  }

  public UniTask<PublishToTopicResult> PublishToTopic(PublishToTopicRequest request)
  {
      return module.CallUnaryProcedure<PublishToTopicResult>("PublishToTopic", request);
  }

}
}
